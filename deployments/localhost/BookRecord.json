{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "reader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "AddBook",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bookId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "name": "SetCompleted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "year",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "author",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "name": "addBook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCompletedBooks",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "year",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "author",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "completed",
              "type": "bool"
            }
          ],
          "internalType": "struct BookRecord.Book[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUncompletedBooks",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "year",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "author",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "completed",
              "type": "bool"
            }
          ],
          "internalType": "struct BookRecord.Book[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bookId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "name": "setCompleted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x47d4fadd43614b5c05ed1b1f5b6eeec592c0c4378e094c09455af34f3181e13e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "929409",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x6d086130fc7c34835d7128b2616dea7492db460200155d4f622c96e79f7583ec",
    "transactionHash": "0x47d4fadd43614b5c05ed1b1f5b6eeec592c0c4378e094c09455af34f3181e13e",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "929409",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "172b3c98b0670714f480a4202bc82e1d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"reader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"AddBook\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bookId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"name\":\"SetCompleted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"year\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"author\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"name\":\"addBook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCompletedBooks\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"year\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"author\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"internalType\":\"struct BookRecord.Book[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUncompletedBooks\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"year\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"author\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"internalType\":\"struct BookRecord.Book[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bookId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"name\":\"setCompleted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BookRecord.sol\":\"BookRecord\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BookRecord.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\ncontract BookRecord {\\n    // Events\\n    event AddBook(address reader, uint256 id);\\n    event SetCompleted(uint256 bookId, bool completed);\\n\\n    // The struct for new book\\n    struct Book {\\n        uint id;\\n        string title;\\n        uint year;\\n        string author;\\n        bool completed;\\n    }\\n\\n    // Array of new books added by users\\n    Book[] private bookList;\\n\\n    // Mapping of book Id to new users address adding new books under their names\\n    mapping (uint256 => address) bookToReader;\\n\\n    function addBook(string memory title, uint256 year, string memory author, bool completed) external {\\n        // Define a variable for the bookId\\n        uint256 bookId = bookList.length;\\n\\n        // Add new book to books-array\\n        bookList.push(Book(bookId, title, year, author, completed));\\n\\n        // Map new user to new book added\\n        bookToReader[bookId] = msg.sender;\\n\\n        // Emit event for adding new book\\n        emit AddBook(msg.sender, bookId);\\n    }\\n\\n    function getBookList(bool completed) private view returns (Book[] memory) {\\n        // Create an array to save finished books\\n        Book[] memory temporary = new Book[](bookList.length);\\n\\n        // Define a counter variable to compare bookList and temporaryBooks arrays\\n        uint256 counter = 0;\\n\\n        // Loop through the bookList array to filter completed books\\n        for(uint256 i = 0; i < bookList.length; i++) {\\n            // Check if the user address and the Completed books matches\\n            if(bookToReader[i] == msg.sender && bookList[i].completed == completed) {\\n                temporary[counter] = bookList[i];\\n                counter++;\\n            }\\n        }\\n\\n        // Create a new array to save the compared/matched results\\n        Book[] memory result = new Book[](counter);\\n        \\n        // Loop through the counter array to fetch matching results of reader and books\\n        for (uint256 i = 0; i < counter; i++) {\\n            result[i] = temporary[i];\\n        }\\n        return result;\\n    }\\n\\n    function getCompletedBooks() external view returns (Book[] memory) {\\n        return getBookList(true);\\n    }\\n\\n    function getUncompletedBooks() external  view returns (Book[] memory) {\\n        return getBookList(false);\\n    }\\n\\n    function setCompleted(uint256 bookId, bool completed) external {\\n        if (bookToReader[bookId] == msg.sender) {\\n            bookList[bookId].completed = completed;\\n        }\\n        emit SetCompleted(bookId, completed);\\n    }\\n}\",\"keccak256\":\"0xc820d5c92fad1188008950b93d94174d5d37ae28df714a1fe236341ec1fa9aaf\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 28,
        "contract": "contracts/BookRecord.sol:BookRecord",
        "label": "bookList",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(Book)24_storage)dyn_storage"
      },
      {
        "astId": 32,
        "contract": "contracts/BookRecord.sol:BookRecord",
        "label": "bookToReader",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Book)24_storage)dyn_storage": {
        "base": "t_struct(Book)24_storage",
        "encoding": "dynamic_array",
        "label": "struct BookRecord.Book[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Book)24_storage": {
        "encoding": "inplace",
        "label": "struct BookRecord.Book",
        "members": [
          {
            "astId": 15,
            "contract": "contracts/BookRecord.sol:BookRecord",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 17,
            "contract": "contracts/BookRecord.sol:BookRecord",
            "label": "title",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 19,
            "contract": "contracts/BookRecord.sol:BookRecord",
            "label": "year",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 21,
            "contract": "contracts/BookRecord.sol:BookRecord",
            "label": "author",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 23,
            "contract": "contracts/BookRecord.sol:BookRecord",
            "label": "completed",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}